{
  "Introduction": "Introduction",
  "<0>@crossed/styled</0> is here to streamline your styling workflow, offering the same ease of use as style-components but with a cross-platform twist.": "<0>@crossed/styled</0> is here to streamline your styling workflow, offering the same ease of use as style-components but with a cross-platform twist.",
  "Explore our ecosystem to develop cross-platform applications with<br/><2>react-native</2> and <4>react-native-web</4>": "Explore our ecosystem to develop cross-platform applications with<br/><2>react-native</2> and <4>react-native-web</4>",
  "Cross platform ecosystem": "Cross platform ecosystem",
  "Star us": "Star us",
  "Styled your component with unistyles": "Styled your component with unistyles",
  "Create your accessible component from anything": "Create your accessible component from anything",
  "UI Component made with @crossed/styled": "UI Component made with @crossed/styled",
  "Comming soon": "Comming soon",
  "Additionally, CSS simplifies maintenance and scalability, allowing for consistent style changes and design expansion as the website evolves.": "Additionally, CSS simplifies maintenance and scalability, allowing for consistent style changes and design expansion as the website evolves.",
  "Key Features": "Key Features",
  "<0>Unified Codebase:</0> Maintain a single codebase to generate styles seamlessly for both React and React Native platforms.": "<0>Unified Codebase:</0> Maintain a single codebase to generate styles seamlessly for both React and React Native platforms.",
  "<0>Higher Order Component (HOC):</0> Unlock the power of hover, active, and focus states in your components effortlessly.": "<0>Higher Order Component (HOC):</0> Unlock the power of hover, active, and focus states in your components effortlessly.",
  "<0>React-Native-Unistyles Integration:</0> Familiar with react-native-unistyles? Harness its potential with our library for an enhanced styling experience.": "<0>React-Native-Unistyles Integration:</0> Familiar with react-native-unistyles? Harness its potential with our library for an enhanced styling experience.",
  "Dependencies used in @crossed/styled": "Dependencies used in @crossed/styled",
  "Dependencies used": "Dependencies used",
  "Made with crossed ecosystem": "Made with crossed ecosystem",
  "On this page": "On this page",
  "Setup": "Setup",
  "Guide": "Guide",
  "Concept": "Concept",
  "Usage": "Usage",
  "Reference": "Reference",
  "styled": "styled",
  "Registry": "Registry",
  "Install dependencies": "Install dependencies",
  "Configure": "Configure",
  "Get @crossed/styled set up, step by step": "Get @crossed/styled set up, step by step",
  "You should finish installation and configure react-native-unistyles, click <2>here</2>": "You should finish installation and configure react-native-unistyles, click <2>here</2>",
  "For add style on server side rendering, you should add registry on server components (nextjs app router)": "For add style on server side rendering, you should add registry on server components (nextjs app router)",
  "Server side renderer": "Server side renderer",
  "extended from": "{{componentName}} is extended from ",
  "font size props description": "Apply choosen font's size. Default value is 20.",
  "weight props description": "Apply choosen font's weight. Default value is a weight of 400.",
  "color props description": "Apply choosen font's color. Default color depend on the theme : black for light theme and white for dark theme.",
  "size props description": "Apply a specific horizontal padding and height to the View.",
  "status props description": "Change background color",
  "variant props description": "Apply a preconfigured variant ",
  "space props description": "Apply spacing between component in the Box",
  "center props description": "Add propertie align-items: center",
  "direction props description": "Choose if separation is vertical or horizontal",
  "code description": "Code is a component used to display inline code.",
  "card description": "Card is a flexible component used to group and display content in a clear and concise format.",
  "kbd description": "The keyboard key component exists to show which key or combination of keys performs a given action.",
  "list description": "List is used to display list items. It renders a <ul> element by default.",
  "menuList description": "A simple, sizable list item.",
  "alert description": "Alerts are used to communicate a state that affects a system, feature or page.",
  "button description": "Button component is used to trigger an action or event, such as submitting a form, opening a Dialog, canceling an action, or performing a delete operation.",
  "box description": "Box is a layout component used to group elements together and apply a space between them",
  "center description": "Center is a layout component that centers its child within itself.",
  "xbox description": "Used to Box elements in the horizontal direction",
  "ybox description": "Used to Box elements in the vertical direction",
  "separator description": "Visually or semantically separates content.",
  "anchor description": "Anchor is an accessible element for navigation.",
  "B description": "The B element is used to draw the reader's attention to the element's contents.",
  "heading description": "The H1 to H6 elements represent six levels of section headings.",
  "I description": "The I element represents a range of text that is set off from the normal text for some reason, such as idiomatic text, technical terms, taxonomical designations, among others.",
  "P description": "The P represents a paragraph.",
  "text description": "Text primitives with themes custom to each font.",
  "Name": "Name",
  "Preconfigured values": "Preconfigured values",
  "Example": "Example",
  "Anatomy": "Anatomy",
  "Return": "Return",
  "Type any code here": "Type any code here",
  "Required": "Required",
  "plugins": {
    "intro": "@crossed/styled is based on a plugin system to generate the style or className for the web. This allows great flexibility on how to write are design system",
    "structure": "Structure of a plugin",
    "methodApply": "Method apply",
    "methodClassname": "Method addClassname"
  }
}
