/**
 * Copyright (c) Paymium.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root of this projects source tree.
 */

import { XBox, Select, Text, YBox } from '@crossed/ui';
import { createStyles } from '@crossed/styled';
import { FlatList } from 'react-native';
import { SelectProps } from '@crossed/ui';
import { useId } from 'react';

const styles = createStyles(() => ({
  scrollview: { base: { paddingHorizontal: 10, paddingVertical: 10 } },
  between: {
    base: {
      width: '100%',
      justifyContent: 'space-between',
    },
  },
  end: { base: { alignSelt: 'flex-end', flexDirection: 'row' } },
}));

const countries = [
  'ðŸ‡«ðŸ‡· FranÃ§ais',
  'ðŸ‡¬ðŸ‡§ Anglais',
  'ðŸ‡©ðŸ‡ª Allemagne',
  'ðŸ‡¯ðŸ‡µ Japon',
  'ðŸ‡¨ðŸ‡² Cameroun',
  'ðŸ‡ªðŸ‡¸ Espagne',
  'ðŸ‡¬ðŸ‡· GrÃ¨ce',
  'ðŸ‡¸ðŸ‡ª SuÃ¨de',
  'ðŸ‡²ðŸ‡½ Mexique',
  'ðŸ‡³ðŸ‡´ NorvÃ¨ge',
  'ðŸ‡±ðŸ‡º Luxembourg',
  'ðŸ‡²ðŸ‡¶ Martinique',
  'ðŸ‡±ðŸ‡¹ Lituanie',
  'ðŸ‡²ðŸ‡¨ Monaco',
  'ðŸ‡³ðŸ‡¿ Nouvelle-ZÃ©lande',
  'ðŸ‡®ðŸ‡ª Irlande',
  'ðŸ‡°ðŸ‡­ Cambodge',
  'ðŸ‡®ðŸ‡¸ Islande',
  'ðŸ‡ªðŸ‡º Union EuropÃ©enne',
  'ðŸ‡¨ðŸ‡­ Suisse',
];

const Example = (props: SelectProps) => {
  const id = useId();
  return (
    <Select {...props}>
      <Select.Trigger>
        <XBox alignItems="center" justifyContent="between">
          <Text>
            <Select.Value />
          </Text>
        </XBox>
      </Select.Trigger>
      <Select.Content>
        {countries.map((country) => (
          <Select.Option
            key={`${id}-${country}`}
            value={country}
            search={country}
          >
            <Text>{country}</Text>
          </Select.Option>
        ))}
      </Select.Content>
    </Select>
  );
};

export default function TabOneScreen() {
  return (
    <FlatList
      contentContainerStyle={styles.scrollview.rnw().style}
      data={[]}
      ListHeaderComponent={
        <YBox alignItems="stretch" space="sm">
          <Example label={'Basic'} />
          <Example label={'Multiple'} multiple />
          <Example label={'Search'} searchable />
          <Example label={'Seach Multiple'} multiple searchable />
        </YBox>
      }
      renderItem={() => null}
    />
  );
}
